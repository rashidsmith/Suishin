Create Discrete Modality Selection Step
Add the missing modality selection step between IBOs and 4C generation.

Create ModalitySelectionStep component:

javascript// /client/src/components/ModalitySelectionStep.jsx
const ModalitySelectionStep = ({ sessionId, onNext }) => {
  const [selectedModality, setSelectedModality] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  
  const modalities = [
    {
      id: 'onsite',
      title: 'In-Person',
      description: 'Face-to-face training in a physical location',
      icon: 'üè¢',
      benefits: ['Direct interaction', 'Hands-on activities', 'Group dynamics'],
      considerations: ['Travel required', 'Scheduling coordination', 'Physical materials']
    },
    {
      id: 'virtual',
      title: 'Virtual',
      description: 'Online training via video conferencing',
      icon: 'üíª',
      benefits: ['No travel', 'Recording possible', 'Digital tools'],
      considerations: ['Screen fatigue', 'Tech requirements', 'Engagement challenges']
    },
    {
      id: 'hybrid',
      title: 'Hybrid',
      description: 'Mix of in-person and virtual components',
      icon: 'üîÑ',
      benefits: ['Flexibility', 'Best of both', 'Phased delivery'],
      considerations: ['Complex coordination', 'Dual preparation', 'Tech setup']
    }
  ];
  
  const handleSelectModality = async (modalityId) => {
    setIsLoading(true);
    try {
      await api.updateSession(sessionId, { modality: modalityId });
      setSelectedModality(modalityId);
    } catch (error) {
      console.error('Failed to save modality:', error);
    } finally {
      setIsLoading(false);
    }
  };
  
  const handleContinue = () => {
    if (selectedModality) {
      onNext();
    }
  };
  
  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-2xl font-bold mb-2">Choose Your Delivery Method</h2>
        <p className="text-gray-600">
          Your learning objectives are set. Now choose how to deliver them effectively.
        </p>
      </div>
      
      <div className="grid md:grid-cols-3 gap-4">
        {modalities.map((modality) => (
          <div
            key={modality.id}
            className={`border-2 rounded-lg p-4 cursor-pointer transition-all ${
              selectedModality === modality.id
                ? 'border-blue-500 bg-blue-50'
                : 'border-gray-200 hover:border-gray-300'
            }`}
            onClick={() => handleSelectModality(modality.id)}
          >
            <div className="text-center mb-3">
              <div className="text-3xl mb-2">{modality.icon}</div>
              <h3 className="font-semibold">{modality.title}</h3>
              <p className="text-sm text-gray-600">{modality.description}</p>
            </div>
            
            <div className="space-y-2">
              <div>
                <h4 className="text-xs font-medium text-green-600 mb-1">Benefits:</h4>
                <ul className="text-xs text-gray-600">
                  {modality.benefits.map((benefit, i) => (
                    <li key={i}>‚Ä¢ {benefit}</li>
                  ))}
                </ul>
              </div>
              
              <div>
                <h4 className="text-xs font-medium text-orange-600 mb-1">Consider:</h4>
                <ul className="text-xs text-gray-600">
                  {modality.considerations.map((consideration, i) => (
                    <li key={i}>‚Ä¢ {consideration}</li>
                  ))}
                </ul>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      <div className="flex justify-between">
        <button onClick={() => window.history.back()}>‚Üê Back to IBOs</button>
        <button
          onClick={handleContinue}
          disabled={!selectedModality || isLoading}
          className="bg-blue-600 text-white px-6 py-2 rounded disabled:opacity-50"
        >
          {isLoading ? 'Saving...' : 'Continue to 4C Activities ‚Üí'}
        </button>
      </div>
    </div>
  );
};

Update the GenerateIBOsStep continue button:

javascript// In GenerateIBOsStep, change the continue button to:
<button 
  onClick={() => onNext()} 
  className="bg-blue-600 text-white px-6 py-2 rounded"
>
  Continue to Modality Selection ‚Üí
</button>
Test: After generating IBOs, clicking continue goes to modality selection, not directly to activities.